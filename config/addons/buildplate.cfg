# Load last know buildplate at startup
[delayed_gcode _load_buildplate]
initial_duration: 0.1
gcode:
    {% set _buildplate=printer.save_variables.variables['buildplate']|default({}) %}
    {% if _buildplate|length %}
        SET_VARS_KBOBINE BUILDPLATE='{_buildplate|tojson}'
        RESPOND TYPE=command MSG="{"Selected buildplate: %s  offset : %s" % (_buildplate.name, _buildplate.offset)}"
    {% endif %}

[vars KBOBINE]
buildplate: {}

[gcode_macro SELECT_BUILDPLATE]
variable_buttons: {}
gcode:
## load settings table or throw error if save variable not set
    {% set _buildplates=printer.save_variables.variables['buildplate_table']|default({}) %}
    {% if _buildplates|length %}
        {% if params["PEI"]|default('') =='' %}
            {% for buildplate in _buildplates %}
                {% set _= buttons.update({loop.index0:{'name' : buildplate, 'params' : 'PEI=\\"%s\\"' % buildplate}}) %}
            {% endfor %}
            _PROMPT_SHOW MACRO=SELECT_BUILDPLATE MAX=0
        {% else %}
            _PROMPT_END
            {% set pei = params["PEI"] %}
            {% set buildplate = {'name': pei,'offset': _buildplates[pei]} %}
            SAVE_VARIABLE VARIABLE=buildplate VALUE='{buildplate|tojson}'
            UPDATE_DELAYED_GCODE ID=_load_buildplate DURATION=0.1
        {% endif %}
    {% else %}
        RESPOND TYPE=error MSG="No builplate. Use ADD_BUILDPLATE"
    {% endif %}
        
[gcode_macro ADD_BUILDPLATE]
gcode:
    {% set _buildplates=printer.save_variables.variables['buildplate_table']|default({}) %}
    
    {% set name = params.NAME %}
    {% set offset = params.OFFSET|default(0)|float %}
    
    {% if name != "" %}
        {% if _buildplates[name] is defined %}
            {raise_action_error("This name already exists")}
        {% endif %}

        {% do _buildplates.update({name : offset}) %}
        SAVE_VARIABLE VARIABLE=buildplate_table VALUE='{_buildplates|tojson}'
    {% else %}
        {raise_action_error("NAME must be set")}
    {% endif %}

[gcode_macro APPLY_BUILDPLATE_OFFSET]
gcode:
    {% set _buildplate=printer["gcode_macro _KBOBINE"].buildplate %}
    {% if _buildplate != {}  and _buildplate.offset != 0 %}
        SET_GCODE_OFFSET Z_ADJUST={_buildplate.offset|float}
        RESPOND TYPE=command MSG="{"Buildplate offset applied : %.3f mm" %   _buildplate.offset}"
    {% endif %}

