
[gcode_macro SET_SPOOL]
description: Store settings for spool and apply to printer
gcode:
#######################################################################
## Declare entry params Only for GUI (Fluidd/Mainsail/Klipperscreen) ##
 
    {% set _= params.EXTRUDE_FACTOR %}
    {% set _= params.PRESSURE_ADVANCE %}
    {% set _= params.PA_SMOOTH_TIME %}
    {% set _= params.MAX_FLOW %}

    {% set _= params.BED_TEMP %}
    {% set _= params.EXTRUDER_TEMP %}
    {% set _= params.CHAMBER_TEMP %}
    
    {% set _= params.FAN_SPEED %}
    {% set _= params.FILTER_SPEED %}

    {% set _= params.RETRACT_LENGTH %}
    {% set _= params.RETRACT_SPEED %}
    {% set _= params.UNRETRACT_EXTRA_LENGTH %}
    {% set _= params.UNRETRACT_SPEED %}
    {% set _= params.Z_HOP_HEIGHT %}
    
    {% set _= params.SOAK_DELAY %}
    {% set _= params.Z_ADJUST %}
    
    {% set _= params.FILAMENT_SENSOR %}
    {% set _= params.FILAMENT_DRYER %}

#######################################################################

## Unset empty params (Fluidd workaround)
    {% set _p = params %}
    {% for param in _p.copy() if _p[param] == "" %}
        {% set _= _p.pop(param) %}
    {% endfor %}

    _SET_SETTINGS TABLE=fs_table { _p.items()|map('join','=')|join(' ') }
    {% if printer['gcode_macro _KBOBINE'].apply_on_load %}_APPLY_SETTINGS PARAMS="{_p|map('lower')|join(',')}"{%endif %}


[gcode_macro SET_LOADED_MATERIAL]
description: Set and Apply settings to printer
gcode:
#######################################################################
## Declare entry params Only for GUI (Fluidd/Mainsail/Klipperscreen) ##
 
    {% set _= params.EXTRUDE_FACTOR %}
    {% set _= params.PRESSURE_ADVANCE %}
    {% set _= params.PA_SMOOTH_TIME %}
    {% set _= params.MAX_FLOW %}

    {% set _= params.BED_TEMP %} 
    {% set _= params.EXTRUDER_TEMP %}
    {% set _= params.CHAMBER_TEMP %}
    
    {% set _= params.FAN_SPEED %}
    {% set _= params.FILTER_SPEED %}

    {% set _= params.RETRACT_LENGTH %}
    {% set _= params.RETRACT_SPEED %}
    {% set _= params.UNRETRACT_EXTRA_LENGTH %}
    {% set _= params.UNRETRACT_SPEED %}
    {% set _= params.Z_HOP_HEIGHT %}
    
    {% set _= params.SOAK_DELAY %}
    {% set _= params.Z_ADJUST %}
    
    {% set _= params.FILAMENT_SENSOR %}
    {% set _= params.FILAMENT_DRYER %}

#######################################################################

## Unset empty params (Fluidd workaround)
    {% set _p = params %}
    {% for param in _p.copy() if _p[param] == "" %}
        {% set _= _p.pop(param) %}
    {% endfor %}

    _SET_SETTINGS TABLE=current_settings { _p.items()|map('join','=')|join(' ') }
    {% if printer['gcode_macro _KBOBINE'].apply_on_load %}_APPLY_SETTINGS PARAMS="{_p|map('lower')|join(',')}"{%endif %}

[gcode_macro LOAD_DEFAULT_MATERIAL]
description: Load DEFAULT filament settings. see filament_settings/vars.cfg
gcode:
    {% set fs_vars = printer['gcode_macro _KBOBINE'] %}
    SET_GCODE_VARIABLE MACRO=_KBOBINE VARIABLE=current_settings VALUE='{ fs_vars.default|tojson }'
    {% if printer['gcode_macro _KBOBINE'].apply_on_load %}_APPLY_ALL_SETTINGS{%endif %}

[gcode_macro APPLY_SETTINGS]
description: Apply settings or enable/disable automatic apply on load/change 
gcode:
    {% if params.ENABLE %}
        {% if params.ENABLE in ['0','1'] %}
            SET_GCODE_VARIABLE MACRO=_KBOBINE VARIABLE=apply_on_load VALUE={1 if params.ENABLE|int == 1 else 0}
        {% else %}
            {action_raise_error('ENABLE should be 0 or 1')}
        {% endif %}
    {% else %}
        _APPLY_ALL_SETTINGS
    {% endif %}

[gcode_macro GET_SPOOL]
description: Display current spool settings in console
gcode:
# Load variables from _KBOBINE
    {% set ID = printer["gcode_macro _KBOBINE"].spool_id|string %}
    {% set spool = printer.save_variables.variables['kbobine_table'][ID]|default({}) %} %}
    {% set output_str = [] %}

    {% if spool.settings %}
        {% for el in spool.settings %}
            {% set _= output_str.append("---- %s ----" % el) %}
            {% for k, v in spool.settings[el].items() %}
                {% set _= output_str.append("  -%s : %s" % (k,v)) %}
            {% endfor %}
        {% endfor %}
        { action_respond_info(output_str|join('\n')) }
    {% else %}
        { action_respond_info("No settings") }
    {% endif %}

[gcode_macro GET_LOADED_MATERIAL]
description: Display actual loaded settings in console
gcode:
# Load variables from _KBOBINE
    {% set fs_vars = printer["gcode_macro _KBOBINE"] %}
    {% set default = fs_vars.default %}
    {% set current_settings = fs_vars.current_settings %}
    {% set output_str = [] %}
    {% set filter = params['SETTINGS']|default(default) %}

    {% if current_settings %}
        {% for k,v in current_settings.items() if k in filter %}
            {% set _= output_str.append("-%s%s : %s" % (k,' (default)' if v == default[k] else '',v)) %}
        {% endfor %}
        { action_respond_info(output_str|join('\n')) if filter}
    {% else %}
        { action_respond_info("No settings") }
    {% endif %}

[gcode_macro DEL_SPOOL]
description: Delete spool settings from printer
gcode:
# Load variables from _KBOBINE
    {% set fs_vars = printer["gcode_macro _KBOBINE"] %}
    {% set ID = params['ID']|default(fs_vars.spool_id)|default(0)|int|string %}
# get stored datas or initialize array
    {% set fs_table = printer.save_variables.variables["kbobine_table"]|default({}) %}  

# Delete or Prompt to confirm deletion
    {% if fs_table[ID] %}
        {% if params['CONFIRM'] == 'yes' %}
            _PROMPT_CLOSE
            _DEL_FILAMENT_SETTINGS ID={ID}
            M400
            _LOAD_FILAMENT_SETTINGS
        {% else %}
            _PROMPT_QUESTION TITLE="Remove Spool" MSG="Do you want to remove {ID}:{
                fs_table[ID].vendor}-{
                fs_table[ID].name} from settings ?" ACTION="DEL_SPOOL {rawparams} CONFIRM=yes"
        {% endif %}
    {% endif %}

[gcode_macro CLEAN_DEFAULT]
description: Remove settings from table for current filament if same as default value
gcode:
# Load variables from _KBOBINE
    {% set fs_vars = printer["gcode_macro _KBOBINE"] %}
    {% set default = fs_vars.default %}
    {% set current_settings = fs_vars.current_settings %}
    {% set th_depend = fs_vars.th_depend %}
    {% set ID = fs_vars.spool_id|default(0)|int|string %}
# get stored datas and initialize array
    {% set fs_table = printer.save_variables.variables["kbobine_table"]|default({}) %}
    {% set toremove= {} %}

    {% if fs_table[ID] %}
        {% for th, table in fs_table[ID].settings.items() %}
             # Find values equal to default except extrude factor
            {% for k,v in table.items() if not k in fs_vars.required %}
                {% if v|float == default[k]|default(v)|float %}
                    {% if not toremove[th] %}
                        {% set _= toremove.update({th :[]}) %}
                    {% endif %}
                    {% set _= toremove[th].append(k) %}
                {% endif %}
            {% endfor %}
        {% endfor %}
        # Delete or Prompt to confirm deletion
        {% if toremove|length > 0 %}
            {% if params['CONFIRM'] =='yes' %}
                {% for th in toremove %}
                    {% for el in toremove[th] %}
                        {% set _= fs_table[ID].settings[th].pop(el) %}
                    {% endfor %}
                {% endfor %}
                _PROMPT_CLOSE
                SAVE_VARIABLE VARIABLE=fs_table VALUE='{ fs_table|tojson }'
                {% if not params['QUIET'] %}_FS_VERBOSE MSG="{toremove} removed from {ID}:{fs_table[ID].vendor}-{
                        fs_table[ID].name}"{% endif %}
                _DEPLOY_CURRENT_SETTINGS
            {% else %}
                _PROMPT_QUESTION TITLE="Remove settings" MSG="Do you want to remove {
                        toremove} from {ID}:{fs_table[ID].vendor}-{
                        fs_table[ID].name} ?" ACTION="CLEAN_DEFAULT CONFIRM=yes"
            {% endif %}
        {% else %}
            {% if not params['QUIET'] %}_FS_VERBOSE MSG="Nothing to remove"{% endif %}
        {% endif %}
    {% endif %}

